{
  "version": 3,
  "file": "angular-plotly.js.js",
  "sources": [
    "ng://angular-plotly.js/out/src/app/plotly/plotly.module.ts",
    "ng://angular-plotly.js/out/src/app/plotly/plot/plot.component.ts",
    "ng://angular-plotly.js/out/src/app/plotly/plotly.service.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotComponent } from './plot/plot.component';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [PlotComponent],\n    exports: [PlotComponent],\n})\nexport class PlotlyModule {\n\n}\n",
    "import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChange,\n    SimpleChanges,\n    ViewChild,\n    DoCheck,\n    IterableDiffer,\n    IterableDiffers,\n    KeyValueDiffer,\n    KeyValueDiffers,\n} from '@angular/core';\n\nimport { Plotly, PlotlyService } from '../plotly.service';\nimport { NgClass } from '@angular/common';\n\n// @dynamic\n@Component({\n    selector: 'plotly-plot',\n    template: `<div #plot [attr.id]=\"divId\" [className]=\"getClassName()\" [ngStyle]=\"style\"></div>`,\n    providers: [PlotlyService],\n})\nexport class PlotComponent implements OnInit, OnChanges, OnDestroy, DoCheck {\n    protected defaultClassName = 'js-plotly-plot';\n\n    public plotlyInstance: Plotly.PlotlyHTMLElement;\n    public resizeHandler?: (instance: Plotly.PlotlyHTMLElement) => void;\n    public layoutDiffer: KeyValueDiffer<string, any>;\n    public dataDiffer: IterableDiffer<Plotly.Data>;\n\n    @ViewChild('plot') plotEl: ElementRef;\n\n    @Input() data?: Plotly.Data[];\n    @Input() layout?: Partial<Plotly.Layout>;\n    @Input() config?: Partial<Plotly.Config>;\n    @Input() style?: { [key: string]: string };\n\n    @Input() divId?: string;\n    @Input() revision: number = 0;\n    @Input() className?: string | string[];\n    @Input() debug: boolean = false;\n    @Input() useResizeHandler: boolean = false;\n\n    @Output() initialized = new EventEmitter<Plotly.Figure>();\n    @Output() update = new EventEmitter<Plotly.Figure>();\n    @Output() purge = new EventEmitter<Plotly.Figure>();\n    @Output() error = new EventEmitter<Error>();\n\n    @Output() afterExport = new EventEmitter();\n    @Output() afterPlot = new EventEmitter();\n    @Output() animated = new EventEmitter();\n    @Output() animatingFrame = new EventEmitter();\n    @Output() animationInterrupted = new EventEmitter();\n    @Output() autoSize = new EventEmitter();\n    @Output() beforeExport = new EventEmitter();\n    @Output() buttonClicked = new EventEmitter();\n    @Output() click = new EventEmitter();\n    @Output() clickAnnotation = new EventEmitter();\n    @Output() deselect = new EventEmitter();\n    @Output() doubleClick = new EventEmitter();\n    @Output() framework = new EventEmitter();\n    @Output() hover = new EventEmitter();\n    @Output() legendClick = new EventEmitter();\n    @Output() legendDoubleClick = new EventEmitter();\n    @Output() relayout = new EventEmitter();\n    @Output() restyle = new EventEmitter();\n    @Output() redraw = new EventEmitter();\n    @Output() selected = new EventEmitter();\n    @Output() selecting = new EventEmitter();\n    @Output() sliderChange = new EventEmitter();\n    @Output() sliderEnd = new EventEmitter();\n    @Output() sliderStart = new EventEmitter();\n    @Output() transitioning = new EventEmitter();\n    @Output() transitionInterrupted = new EventEmitter();\n    @Output() unhover = new EventEmitter();\n\n    public eventNames = ['afterExport', 'afterPlot', 'animated', 'animatingFrame', 'animationInterrupted', 'autoSize',\n        'beforeExport', 'buttonClicked', 'click', 'clickAnnotation', 'deselect', 'doubleClick', 'framework', 'hover',\n        'legendClick', 'legendDoubleClick', 'relayout', 'restyle', 'redraw', 'selected', 'selecting', 'sliderChange',\n        'sliderEnd', 'sliderStart', 'transitioning', 'transitionInterrupted', 'unhover'];\n\n    constructor(\n        public plotly: PlotlyService,\n        public iterableDiffers: IterableDiffers,\n        public keyValueDiffers: KeyValueDiffers,\n    ) { }\n\n    ngOnInit() {\n        this.createPlot().then(() => {\n            const figure = this.createFigure();\n            this.initialized.emit(figure);\n        });\n    }\n\n    ngOnDestroy() {\n        if (typeof this.resizeHandler === 'function') {\n            this.getWindow().removeEventListener('resize', this.resizeHandler as any);\n            this.resizeHandler = undefined;\n        }\n\n        const figure = this.createFigure();\n        this.purge.emit(figure);\n        PlotlyService.remove(this.plotlyInstance);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        let shouldUpdate = false;\n\n        const revision: SimpleChange = changes.revision;\n        if (revision && !revision.isFirstChange()) {\n            shouldUpdate = true;\n        }\n\n        const debug: SimpleChange = changes.debug;\n        if (debug && !debug.isFirstChange()) {\n            shouldUpdate = true;\n        }\n\n        if (shouldUpdate) {\n            this.updatePlot();\n        }\n\n        this.updateWindowResizeHandler();\n    }\n\n    ngDoCheck() {\n        let shouldUpdate = false;\n\n        if (this.layoutDiffer) {\n            const layoutHasDiff = this.layoutDiffer.diff(this.layout);\n            if (layoutHasDiff) {\n                shouldUpdate = true;\n            }\n        } else if (this.layout) {\n            this.layoutDiffer = this.keyValueDiffers.find(this.layout).create();\n        } else {\n            this.layoutDiffer = undefined;\n        }\n\n        if (this.dataDiffer) {\n            const dataHasDiff = this.dataDiffer.diff(this.data);\n            if (dataHasDiff) {\n                shouldUpdate = true;\n            }\n        } else if (Array.isArray(this.data)) {\n            this.dataDiffer = this.iterableDiffers.find(this.data).create(this.dataDifferTrackBy);\n        } else {\n            this.dataDiffer = undefined;\n        }\n\n        if (shouldUpdate && this.plotlyInstance) {\n            this.updatePlot();\n        }\n    }\n\n    getWindow(): any {\n        return window;\n    }\n\n    getClassName(): string {\n        let classes = [this.defaultClassName];\n\n        if (Array.isArray(this.className)) {\n            classes = classes.concat(this.className);\n        } else if (this.className) {\n            classes.push(this.className);\n        }\n\n        return classes.join(' ');\n    }\n\n    createPlot(): Promise<void> {\n        return this.plotly.newPlot(this.plotEl.nativeElement, this.data, this.layout, this.config).then(plotlyInstance => {\n            this.plotlyInstance = plotlyInstance;\n            this.getWindow().gd = this.debug ? plotlyInstance : undefined;\n\n            this.eventNames.forEach(name => {\n                const eventName = `plotly_${name.toLowerCase()}`;\n                plotlyInstance.on(eventName, (data: any) => (this[name] as EventEmitter<void>).emit(data));\n            });\n\n            this.updateWindowResizeHandler();\n        }, err => {\n            console.error('Error while plotting:', err);\n            this.error.emit(err);\n        });\n    }\n\n    createFigure(): Plotly.Figure {\n        const p: any = this.plotlyInstance;\n        const figure: Plotly.Figure = {\n            data: p.data,\n            layout: p.layout,\n            frames: p._transitionData ? p._transitionData._frames : null\n        };\n\n        return figure;\n    }\n\n    updatePlot() {\n        if (!this.plotlyInstance) {\n            const error = new Error(`Plotly component wasn't initialized`);\n            this.error.emit(error);\n            throw error;\n        }\n\n        return this.createPlot().then(() => {\n            const figure = this.createFigure();\n            this.update.emit(figure);\n        });\n    }\n\n    updateWindowResizeHandler() {\n        if (this.useResizeHandler) {\n            if (this.resizeHandler === undefined) {\n                this.resizeHandler = () => this.plotly.resize(this.plotlyInstance);\n                this.getWindow().addEventListener('resize', this.resizeHandler as any);\n            }\n        } else {\n            if (typeof this.resizeHandler === 'function') {\n                this.getWindow().removeEventListener('resize', this.resizeHandler as any);\n                this.resizeHandler = undefined;\n            }\n        }\n    }\n\n    dataDifferTrackBy(_: number, item: any): any {\n        const obj = Object.assign({}, item, { uid: '' });\n        return JSON.stringify(obj);\n    }\n\n}\n",
    "import { Injectable } from '@angular/core';\nimport * as Plotlyjs from 'plotly.js/dist/plotly.min.js';\n\n\nexport namespace Plotly {\n    export type Data = any;\n    export type Layout = any;\n    export type Config = any;\n\n    export interface Figure {\n        data: Data[];\n        layout: Partial<Layout>;\n        frames: Partial<Config>;\n    }\n\n    export interface PlotlyHTMLElement extends HTMLElement {\n        on(event: string, callback: Function): void;\n        removeListener(event: string, callback: Function): void;\n    }\n}\n\n\n\n@Injectable()\nexport class PlotlyService {\n    protected static instances: Plotly.PlotlyHTMLElement[] = [];\n    protected plotly = Plotlyjs;\n\n    constructor() {\n        if (typeof this.plotly === 'undefined') {\n            throw new Error(`Peer dependency plotly.js isn't installed`);\n        }\n    }\n\n    public static insert(instance: Plotly.PlotlyHTMLElement) {\n        const index = PlotlyService.instances.indexOf(instance);\n        if (index === -1) {\n            PlotlyService.instances.push(instance);\n        }\n        return instance;\n    }\n\n    public static remove(div: Plotly.PlotlyHTMLElement) {\n        const index = PlotlyService.instances.indexOf(div);\n        if (index >= 0) {\n            PlotlyService.instances.splice(index, 1);\n        }\n    }\n\n    public newPlot(div: HTMLDivElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>) {\n        return this.plotly.newPlot(div, data, layout, config).then(instance => PlotlyService.insert(instance));\n    }\n\n    public plot(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>) {\n        return this.plotly.plot(div, data, layout, config);\n    }\n\n    public update(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>) {\n        return this.plotly.update(div, data, layout, config);\n    }\n\n    public resize(div: Plotly.PlotlyHTMLElement): void {\n        return this.plotly.Plots.resize(div);\n    }\n\n    public getPlotly() {\n        return this.plotly;\n    }\n\n    public getInstanceByDivId(id: string): Plotly.PlotlyHTMLElement | undefined {\n        for (const instance of PlotlyService.instances) {\n            if (instance.id === id) {\n                return instance;\n            }\n        }\n        return undefined;\n    }\n\n}\n"
  ],
  "names": [],
  "mappings": ";;;;;;;;AEAA,AAIA,IAAiB,MAAM,CAetB;AAfD,CAAA,UAAiB,MAAM,EAAvB;;;;;;;;;CAAA,EAAiB,MAAM,KAAN,MAAM,GAAvB,EAAA,CAAA,CAAA,CAeC;AAKD,AAAA,MAAA,aAAA,CAAA;IAII,WAAJ,GAAA;QAFA,IAAA,CAAA,MAAA,GAAuB,QAAQ,CAA/B;QAGQ,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW,EAAE;YACpC,MAAM,IAAI,KAAK,CAAC,CAA5B,yCAAA,CAAuE,CAAC,CAAC;SAChE;KACJ;;;;;IAEM,OAAO,MAAM,CAAC,QAAkC,EAA3D;QACQ,uBAAM,KAAK,GAAG,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YACd,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC1C;QACD,OAAO,QAAQ,CAAC;;;;;;IAGb,OAAO,MAAM,CAAC,GAA6B,EAAtD;QACQ,uBAAM,KAAK,GAAG,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACnD,IAAI,KAAK,IAAI,CAAC,EAAE;YACZ,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC5C;;;;;;;;;IAGE,OAAO,CAAC,GAAmB,EAAE,IAAmB,EAAE,MAA+B,EAAE,MAA+B,EAA7H;QACQ,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;;;;;;;;;IAGpG,IAAI,CAAC,GAA6B,EAAE,IAAmB,EAAE,MAA+B,EAAE,MAA+B,EAApI;QACQ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;;;;;;;;;IAGhD,MAAM,CAAC,GAA6B,EAAE,IAAmB,EAAE,MAA+B,EAAE,MAA+B,EAAtI;QACQ,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;;;;;;IAGlD,MAAM,CAAC,GAA6B,EAA/C;QACQ,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;;;;;IAGlC,SAAS,GAApB;QACQ,OAAO,IAAI,CAAC,MAAM,CAAC;;;;;;IAGhB,kBAAkB,CAAC,EAAU,EAAxC;QACQ,KAAK,uBAAM,QAAQ,IAAI,aAAa,CAAC,SAAS,EAAE;YAC5C,IAAI,QAAQ,CAAC,EAAE,KAAK,EAAE,EAAE;gBACpB,OAAO,QAAQ,CAAC;aACnB;SACJ;QACD,OAAO,SAAS,CAAC;;;AAlDzB,aAAA,CAAA,SAAA,GAA6D,EAAE,CAA/D;;IAFA,EAAA,IAAA,EAAC,UAAU,EAAX;;;;;;;;;ADvBA,AA4BA,MAAA,aAAA,CAAA;;;;;;IA2DI,WAAJ,CACe,MADf,EAEe,eAFf,EAGe,eAHf,EAAA;QACe,IAAf,CAAA,MAAqB,GAAN,MAAM,CAArB;QACe,IAAf,CAAA,eAA8B,GAAf,eAAe,CAA9B;QACe,IAAf,CAAA,eAA8B,GAAf,eAAe,CAA9B;QA7DA,IAAA,CAAA,gBAAA,GAAiC,gBAAgB,CAAjD;QAeA,IAAA,CAAA,QAAA,GAAgC,CAAC,CAAjC;QAEA,IAAA,CAAA,KAAA,GAA8B,KAAK,CAAnC;QACA,IAAA,CAAA,gBAAA,GAAyC,KAAK,CAA9C;QAEA,IAAA,CAAA,WAAA,GAA4B,IAAI,YAAY,EAAiB,CAA7D;QACA,IAAA,CAAA,MAAA,GAAuB,IAAI,YAAY,EAAiB,CAAxD;QACA,IAAA,CAAA,KAAA,GAAsB,IAAI,YAAY,EAAiB,CAAvD;QACA,IAAA,CAAA,KAAA,GAAsB,IAAI,YAAY,EAAS,CAA/C;QAEA,IAAA,CAAA,WAAA,GAA4B,IAAI,YAAY,EAAE,CAA9C;QACA,IAAA,CAAA,SAAA,GAA0B,IAAI,YAAY,EAAE,CAA5C;QACA,IAAA,CAAA,QAAA,GAAyB,IAAI,YAAY,EAAE,CAA3C;QACA,IAAA,CAAA,cAAA,GAA+B,IAAI,YAAY,EAAE,CAAjD;QACA,IAAA,CAAA,oBAAA,GAAqC,IAAI,YAAY,EAAE,CAAvD;QACA,IAAA,CAAA,QAAA,GAAyB,IAAI,YAAY,EAAE,CAA3C;QACA,IAAA,CAAA,YAAA,GAA6B,IAAI,YAAY,EAAE,CAA/C;QACA,IAAA,CAAA,aAAA,GAA8B,IAAI,YAAY,EAAE,CAAhD;QACA,IAAA,CAAA,KAAA,GAAsB,IAAI,YAAY,EAAE,CAAxC;QACA,IAAA,CAAA,eAAA,GAAgC,IAAI,YAAY,EAAE,CAAlD;QACA,IAAA,CAAA,QAAA,GAAyB,IAAI,YAAY,EAAE,CAA3C;QACA,IAAA,CAAA,WAAA,GAA4B,IAAI,YAAY,EAAE,CAA9C;QACA,IAAA,CAAA,SAAA,GAA0B,IAAI,YAAY,EAAE,CAA5C;QACA,IAAA,CAAA,KAAA,GAAsB,IAAI,YAAY,EAAE,CAAxC;QACA,IAAA,CAAA,WAAA,GAA4B,IAAI,YAAY,EAAE,CAA9C;QACA,IAAA,CAAA,iBAAA,GAAkC,IAAI,YAAY,EAAE,CAApD;QACA,IAAA,CAAA,QAAA,GAAyB,IAAI,YAAY,EAAE,CAA3C;QACA,IAAA,CAAA,OAAA,GAAwB,IAAI,YAAY,EAAE,CAA1C;QACA,IAAA,CAAA,MAAA,GAAuB,IAAI,YAAY,EAAE,CAAzC;QACA,IAAA,CAAA,QAAA,GAAyB,IAAI,YAAY,EAAE,CAA3C;QACA,IAAA,CAAA,SAAA,GAA0B,IAAI,YAAY,EAAE,CAA5C;QACA,IAAA,CAAA,YAAA,GAA6B,IAAI,YAAY,EAAE,CAA/C;QACA,IAAA,CAAA,SAAA,GAA0B,IAAI,YAAY,EAAE,CAA5C;QACA,IAAA,CAAA,WAAA,GAA4B,IAAI,YAAY,EAAE,CAA9C;QACA,IAAA,CAAA,aAAA,GAA8B,IAAI,YAAY,EAAE,CAAhD;QACA,IAAA,CAAA,qBAAA,GAAsC,IAAI,YAAY,EAAE,CAAxD;QACA,IAAA,CAAA,OAAA,GAAwB,IAAI,YAAY,EAAE,CAA1C;QAEA,IAAA,CAAA,UAAA,GAAwB,CAAC,aAAa,EAAE,WAAW,EAAE,UAAU,EAAE,gBAAgB,EAAE,sBAAsB,EAAE,UAAU;YAC7G,cAAc,EAAE,eAAe,EAAE,OAAO,EAAE,iBAAiB,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,EAAE,OAAO;YAC5G,aAAa,EAAE,mBAAmB,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,cAAc;YAC5G,WAAW,EAAE,aAAa,EAAE,eAAe,EAAE,uBAAuB,EAAE,SAAS,CAAC,CAAxF;KAMS;;;;IAEL,QAAQ,GAAZ;QACQ,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,MAA/B;YACY,uBAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACjC,CAAC,CAAC;KACN;;;;IAED,WAAW,GAAf;QACQ,IAAI,OAAO,IAAI,CAAC,aAAa,KAAK,UAAU,EAAE;YAC1C,IAAI,CAAC,SAAS,EAAE,CAAC,mBAAmB,CAAC,QAAQ,oBAAE,IAAI,CAAC,aAAoB,EAAC,CAAC;YAC1E,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;SAClC;QAED,uBAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACxB,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC7C;;;;;IAED,WAAW,CAAC,OAAsB,EAAtC;QACQ,qBAAI,YAAY,GAAG,KAAK,CAAC;QAEzB,uBAAM,QAAQ,GAAiB,OAAO,CAA9C,UAAA,CAAuD,CAAC;QAChD,IAAI,QAAQ,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE;YACvC,YAAY,GAAG,IAAI,CAAC;SACvB;QAED,uBAAM,KAAK,GAAiB,OAAO,CAA3C,OAAA,CAAiD,CAAC;QAC1C,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,EAAE;YACjC,YAAY,GAAG,IAAI,CAAC;SACvB;QAED,IAAI,YAAY,EAAE;YACd,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QAED,IAAI,CAAC,yBAAyB,EAAE,CAAC;KACpC;;;;IAED,SAAS,GAAb;QACQ,qBAAI,YAAY,GAAG,KAAK,CAAC;QAEzB,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,uBAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1D,IAAI,aAAa,EAAE;gBACf,YAAY,GAAG,IAAI,CAAC;aACvB;SACJ;aAAM,IAAI,IAAI,CAAC,MAAM,EAAE;YACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;SACvE;aAAM;YACH,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;SACjC;QAED,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,uBAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpD,IAAI,WAAW,EAAE;gBACb,YAAY,GAAG,IAAI,CAAC;aACvB;SACJ;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;SACzF;aAAM;YACH,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;SAC/B;QAED,IAAI,YAAY,IAAI,IAAI,CAAC,cAAc,EAAE;YACrC,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;KACJ;;;;IAED,SAAS,GAAb;QACQ,OAAO,MAAM,CAAC;KACjB;;;;IAED,YAAY,GAAhB;QACQ,qBAAI,OAAO,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEtC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAC/B,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC5C;aAAM,IAAI,IAAI,CAAC,SAAS,EAAE;YACvB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAChC;QAED,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5B;;;;IAED,UAAU,GAAd;QACQ,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,IAAtH;YACY,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,cAAc,GAAG,SAAS,CAAC;YAE9D,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,IAAxC;gBACgB,uBAAM,SAAS,GAAG,CAAlC,OAAA,EAA4C,IAAI,CAAC,WAAW,EAAE,CAA9D,CAAgE,CAAC;gBACjD,cAAc,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,IAAS,KAAK,mBAAC,IAAI,CAAC,IAAI,CAAuB,GAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;aAC9F,CAAC,CAAC;YAEH,IAAI,CAAC,yBAAyB,EAAE,CAAC;SACpC,EAAE,GAAG,IAAd;YACY,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;YAC5C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACxB,CAAC,CAAC;KACN;;;;IAED,YAAY,GAAhB;QACQ,uBAAM,CAAC,GAAQ,IAAI,CAAC,cAAc,CAAC;QACnC,uBAAM,MAAM,GAAkB;YAC1B,IAAI,EAAE,CAAC,CAAC,IAAI;YACZ,MAAM,EAAE,CAAC,CAAC,MAAM;YAChB,MAAM,EAAE,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC,eAAe,CAAC,OAAO,GAAG,IAAI;SAC/D,CAAC;QAEF,OAAO,MAAM,CAAC;KACjB;;;;IAED,UAAU,GAAd;QACQ,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACtB,uBAAM,KAAK,GAAG,IAAI,KAAK,CAAC,CAApC,mCAAA,CAAyE,CAAC,CAAC;YAC/D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvB,MAAM,KAAK,CAAC;SACf;QAED,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,MAAtC;YACY,uBAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC5B,CAAC,CAAC;KACN;;;;IAED,yBAAyB,GAA7B;QACQ,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE;gBAClC,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACnE,IAAI,CAAC,SAAS,EAAE,CAAC,gBAAgB,CAAC,QAAQ,oBAAE,IAAI,CAAC,aAAoB,EAAC,CAAC;aAC1E;SACJ;aAAM;YACH,IAAI,OAAO,IAAI,CAAC,aAAa,KAAK,UAAU,EAAE;gBAC1C,IAAI,CAAC,SAAS,EAAE,CAAC,mBAAmB,CAAC,QAAQ,oBAAE,IAAI,CAAC,aAAoB,EAAC,CAAC;gBAC1E,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;aAClC;SACJ;KACJ;;;;;;IAED,iBAAiB,CAAC,CAAS,EAAE,IAAS,EAA1C;QACQ,uBAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;KAC9B;;;IApNL,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACP,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE,CAAd,kFAAA,CAAkG;gBAC9F,SAAS,EAAE,CAAC,aAAa,CAAC;aAC7B,EAAD,EAAA;;;;IARA,EAAA,IAAA,EAAiB,aAAa,GAA9B;IALA,EAAA,IAAA,EAAI,eAAe,GAAnB;IAEA,EAAA,IAAA,EAAI,eAAe,GAAnB;;;IAoBA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAK,SAAS,EAAd,IAAA,EAAA,CAAe,MAAM,EAArB,EAAA,EAAA;IAEA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;IACA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;IACA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;IAEA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;IACA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;IACA,kBAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;IAEA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IAEA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,gBAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,sBAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,cAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,eAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,iBAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,mBAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,cAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,eAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,uBAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;IACA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;;;;;;;ADhFA,AAUA,MAAA,YAAA,CAAA;;;IALA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;gBACN,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,aAAa,CAAC;gBAC7B,OAAO,EAAE,CAAC,aAAa,CAAC;aAC3B,EAAD,EAAA;;;;;;;;;;;;;;;;;;;;"
}
